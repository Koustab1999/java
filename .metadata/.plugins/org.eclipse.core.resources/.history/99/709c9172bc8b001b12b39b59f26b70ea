package com.valuemomentum.training.testautomation.tests;

import org.testng.annotations.Test;
import org.testng.ITestResult;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import org.testng.annotations.BeforeClass;

import java.io.File;
import java.io.IOException;
import java.time.Duration;

import org.apache.commons.io.FileUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.core.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.Wait;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.valuemomentum.training.testautomation.pages.ProductPage;
import com.aventstack.extentreports.Status;
import com.valuemomentum.training.testautomation.pages.HomePage;
import com.valuemomentum.training.testautomation.pages.MobilesPage;
import com.valuemomentum.training.testautomation.pages.ProductDetailsPage;
import com.valuemomentum.training.testautomation.utils.BaseTest;
import com.valuemomentum.training.testautomation.utils.WebDriverHelper;


public class SmokeTest2 extends BaseTest{
	private static final Logger logger=(Logger) LogManager.getLogger(SmokeTest2.class);
	WebDriver driver;
	HomePage homePage;
	ProductDetailsPage productDetailsPage1;
	MobilesPage mobilesPage;
	ProductPage ProductPage;
	
	@BeforeClass
	public void setup() {
		logger.info("Setup method called");
		this.driver = getDriver();
		homePage=new HomePage(driver);
		
	}


	@Test
	public void Assessment2() throws InterruptedException {
		logger.info("Home Page method called");
		
		mobilesPage=homePage.clickOnMobile();
		Wait<WebDriver> wait = new FluentWait<WebDriver>(driver).withTimeout(Duration.ofSeconds(5))
				.pollingEvery(Duration.ofMillis(1)).ignoring(NoSuchElementException.class);
		WebElement Item1= driver.findElement(By.id("a-page"));
		File item1 = Item1.getScreenshotAs(OutputType.FILE);
		try {
			FileUtils.copyFile(item1, new File("C:\\Training\\Java\\testautomation\\ScreenShot\\HomePage.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		logger.info("MobilePage method called");
		ProductPage=mobilesPage.clickOnSeller();
		WebElement Item2= driver.findElement(By.id("a-page"));
		File item2 = Item2.getScreenshotAs(OutputType.FILE);
		try {
			FileUtils.copyFile(item2, new File("C:\\Training\\Java\\testautomation\\ScreenShot\\MobilePage.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		logger.info("Filter Result Page method called");
		
		productDetailsPage1=ProductPage.clickOnItem();
		Wait<WebDriver> wait1 = new FluentWait<WebDriver>(driver).withTimeout(Duration.ofSeconds(5))
				.pollingEvery(Duration.ofMillis(1)).ignoring(NoSuchElementException.class);
		WebElement Item3= driver.findElement(By.id("a-page"));
		File item3 = Item3.getScreenshotAs(OutputType.FILE);
		try {
			FileUtils.copyFile(item3, new File("C:\\Training\\Java\\testautomation\\ScreenShot\\ResultPage.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		logger.info("Product Details Page method called");
	
		productDetailsPage1.clickOnAddToCart();
		Wait<WebDriver> wait2 = new FluentWait<WebDriver>(driver).withTimeout(Duration.ofSeconds(5))
				.pollingEvery(Duration.ofMillis(1)).ignoring(NoSuchElementException.class);
		WebElement Item4= driver.findElement(By.id("a-page"));
		File item4 = Item4.getScreenshotAs(OutputType.FILE);
		try {
			FileUtils.copyFile(item1, new File("C:\\Training\\Java\\testautomation\\ScreenShot\\ProductPage.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		logger.info("Test Ended");
		
		WebElement Item5= driver.findElement(By.id("a-page"));
		File item5 = Item5.getScreenshotAs(OutputType.FILE);
		try {
			FileUtils.copyFile(item1, new File("C:\\Training\\Java\\testautomation\\ScreenShot\\finalout.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		/*public void onTest(ITestResult result) 
		{
			//test screen shot
			WebDriverHelper.takeScreenshot(result.getMethod().getMethodName());
			test=test.addScreenCaptureFromPath("C:\\training\\java\\testautomation\\screenshot/image"+result.getMethod().getMethodName()+".png");
			test.log(Status.FAIL, result.getMethod().getMethodName()+" test failed");
			}*/
		
		
		
		
		
		
	}
}
